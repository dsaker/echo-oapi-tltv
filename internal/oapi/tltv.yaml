openapi: "3.0.0"
info:
  version: 1.0.0
  title: TalkLikeTv
  description: |
    TalkLikeTV is a language learning application designed to help users overcome the plateau 
    often encountered with other language apps. It offers a personalized learning experience 
    by allowing users to choose the specific phrases they want to focus on. Users can upload 
    a text file with phrases in paragraph form, one phrase per line, or even an SRT file, and 
    the application will generate a set of MP3 audio files to facilitate learning through listening. 
    Additionally, a web application is in development, where users will soon be able to log 
    in and enhance their language skills through reading and translating from their native 
    language to the target language.
    
    You can either add a title at POST /title or create an audio file straight from the file at 
    Post /audio/fromfile. If you add a title at either of these endpoints with more phrases than the
    max set at config.MaxNumPhrases it will return a zipped file of text files split into the max
    number of phrases. I recommend starting this way so you can check to make sure that your file
    was parsed correctly.
  contact:
    name: Dusty Saker
    email: dustywayne@comcast.net
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /voices:
    get:
      summary: Returns list of all available voices
      description: Returns list of voices. Leave query blank for all available voices or filter by language id.
      operationId: getVoices
      parameters:
        - name: languageId
          in: query
          description: filter by languageId
          required: false
          schema:
            type: integer
            format: int16
      responses:
        '200':
          description: voice array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /languages:
    get:
      summary: Returns list of all available languages
      description: Returns list of all available languages
      operationId: getLanguages
      parameters:
      - name: similarity
        in: query
        description: find titles similar to
        required: false
        example: similar
        schema:
          type: string
      responses:
        '200':
          description: language array response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /phrases:
    get:
      summary: Returns phrases by title_id
      description: Returns next [limit] phrases by title_id with lowest correct score in users_phrases table
      operationId: getPhrases
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          example: 10
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: phrase response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phrase'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /usersphrases/{phraseId}/{languageId}:
    patch:
      summary: patches usersphrases resource
      description: returns usersphrases object
      operationId: updateUsersPhrases
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
      parameters:
        - name: phraseId
          in: path
          description: phraseId of usersphrases to patch
          required: true
          schema:
            type: integer
            format: int64
        - name: languageId
          in: path
          description: languageId of usersphrases to patch
          required: true
          schema:
            type: integer
            format: int16
      responses:
        '200':
          description: usersphrases response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPhrases'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /userspermissions:
    post:
      description: Adds a new permission to a user. Must have global admin privilege
      operationId: addUserPermission
      security:
        - BearerAuth:
            - "global:admin"
      requestBody:
        description: User Permission to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserPermission'
      responses:
        '200':
          description: user permission response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermissionResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    post:
      summary: Creates a new user
      description: |
        Creates a new user. Duplicate email and username are not allowed.
        Email, name, and password are required.
      operationId: createUser
      security: []
      requestBody:
        description:  User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid Request. Name must be alphanumeric.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}:
    get:
      summary: Returns a user by ID
      description: Returns a user based on a single ID
      operationId: findUserByID
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a user by ID
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: user deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch an existing user
      description: Patch an existing user
      operationId: updateUser
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
      parameters:
        - name: id
          in: path
          description: ID of user to patch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/login:
    post:
      summary: Login a user
      description: endpoint to login. requires username and password
      operationId: loginUser
      security: []
      requestBody:
        description: username and password
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: user login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /titles:
    get:
      summary: Returns all titles
      description: Returns all titles from the system that the user has access to
      operationId: findTitles
      parameters:
        - name: similarity
          in: query
          description: find titles similar to
          required: true
          example: similar
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: true
          example: 10
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: title response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Title'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a new title
      description: |
        Creates a new title. Duplicate titles are not allowed. languageId is the original language of the title.
        You can get a list of language id's from GET /languages
      operationId: addTitle
      security:
        - BearerAuth:
            - "titles:w"
      requestBody:
        description:  Title to add
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - titleName
                - languageId
                - filePath
              properties:
                titleName:
                  type: string
                languageId:
                  type: string
                filePath:
                  type: string
                  format: binary
      responses:
        '200':
          description: title response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /titles/translate:
    post:
      description: translates phrases from original language of title to language provided in request body
      operationId: titlesTranslate
      security:
        - BearerAuth:
            - "titles:w"
      requestBody:
        description: titleId to translate and language id of language to translate it to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitlesTranslateRequest'
      responses:
        '200':
          description: new translates response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translates'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /titles/{id}:
    get:
      summary: Returns a title by ID
      description: Returns a title based on a single ID
      operationId: findTitleByID
      parameters:
        - name: id
          in: path
          description: ID of title to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: title response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a title by ID
      description: deletes a single title based on the ID supplied
      operationId: deleteTitle
      parameters:
        - name: id
          in: path
          description: ID of title to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: title deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /audio/fromfile:
    post:
      description: |
        create a language learning audio file from uploaded txt or srt file. txt file can be in paragraphs or one phrase per line
      operationId: audioFromFile
      security:
        - BearerAuth:
            - "titles:w"
      requestBody:
        description: >
          fromLanguageId is your native tongue. toLanguageId is the language you want to learn. 
          Use GET /languages for a list of language ids.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - titleName
                - fileLanguageId
                - fromVoiceId
                - toVoiceId
                - filePath
              properties:
                titleName:
                  type: string
                  description: choose a descriptive title that includes to and from languages
                fileLanguageId:
                  type: string
                  example: "49"
                  description: the original language of the file you are uploading
                fromVoiceId:
                  type: string
                  example: "162"
                  description: the language you know
                toVoiceId:
                  type: string
                  example: "208"
                  description: the language you want to learn
                pause:
                  type: string
                  example: "4"
                  minimum: 3
                  maximum: 10
                  description: the pause in seconds between phrases in the audiofile (default is 4)
                pattern:
                  type: string
                  example: "1"
                  description: |
                    pattern is the pattern used to construct the audio files. You have 3 choices: 
                    1 is standard and should be used if you are at a beginner or intermediate level of language learning
                    2 is intermediate
                    3 is advanced and repeats phrases less often and should only be used if you are at an advanced level
                    4 is review and only repeats each phrase one time and can be used to review already learned phrases
                filePath:
                  type: string
                  format: binary
      responses:
        '200':
          description: audio from file response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translates'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /audio/fromtitle:
    post:
      description: |
        create a language learning audio file from title. fromVoiceId is your native language. 
        toVoiceId is the language you want to learn. I recommend using the studio voices when they are available.
        pause is the seconds between phrases in the recording. If you do not delete the generated text-to-speech audio there is no extra costs to create multiple audio's with different spacing.
        I prefer 10 seconds for learning while I am walking and 4 seconds when I am setting at my computer and can pause between phrases.
      operationId: audioFromTitle
      security:
        - BearerAuth:
            - "titles:w"
      requestBody:
        description: |
          fromVoiceId is your native tongue. toVoiceId is the language you want to learn.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioFromTitle'
      responses:
        '200':
          description: audio from file response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translates'
components:
  schemas:
    AudioFromTitle:
      type: object
      required:
        - titleId
        - fromVoiceId
        - toVoiceId
      properties:
        pause:
          type: integer
          example: 4
          minimum: 3
          maximum: 10
          description: the pause in seconds between phrases in the audio file (default is 4)
        titleId:
          type: integer
          format: int64
        fromVoiceId:
          type: integer
          example: 162
          format: int16
        toVoiceId:
          type: integer
          example: 208
          format: int16
        pattern:
          type: integer
          example: 2
          minimum: 1
          maximum: 4
          description: |
            pattern is the pattern used to construct the audio files. You have 3 choices: 
            1 is standard and should be used if you are at a beginner or intermediate level of language learning
            2 is intermediate
            3 is advanced and repeats phrases less often and should only be used if you are at an advanced level
            4 is review and only repeats each phrase one time and can be used to review already learned phrases
    PatchRequest:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/PatchRequestAddReplaceTest'
    PatchRequestAddReplaceTest:
      type: object
      additionalProperties: false
      required:
        - value
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
          example: /email
        value:
          description: The value to add, replace or test.
          example: newemail@email.com
        op:
          description: The operation to perform.
          type: string
          example: add, replace, or test
          enum:
            - add
            - replace
            - test
    User:
      allOf:
        - $ref: '#/components/schemas/NewUser'
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64
              description: Unique id of the user
    NewUser:
      required:
        - name
        - email
        - password
        - titleId
        - ogLanguageId
        - newLanguageId
      properties:
        name:
          type: string
          description: Username of user. Must be alphanumeric.
          example: username
          pattern: "^[a-zA-Z0-9]*$"
          minLength: 5
          maxLength: 20
        email:
          type: string
          example: example@email.com
          pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          description: Email of user
        password:
          type: string
          example: pa55w@rd
          format: password
          description: Password of user
          minLength: 8
          maxLength: 20
        titleId:
          type: integer
          format: int64
          description: Id of title to learn
          example: -1
        ogLanguageId:
          type: integer
          format: int16
          description: Id of native language
          example: -1
        newLanguageId:
          type: integer
          format: int16
          description: Id of language to learn
          example: -1
    Title:
      allOf:
        - $ref: '#/components/schemas/NewTitle'
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64
              description: Unique id of the title
    NewTitle:
      required:
        - title
        - ogLanguageId
        - filename
      properties:
        title:
          type: string
          description: Name of the title
        filename:
          type: string
          format: binary
          description: the file to upload
        ogLanguageId:
          type: integer
          format: int16
          description: Language id of title
    UserLogin:
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username of user
          example: username
        password:
          type: string
          format: password
          description: Password of user
          example: pa55w@rd
    Phrase:
      required:
        - id
        - titleId
      properties:
        id:
          type: integer
          format: int64
          description: id of phrase
        titleId:
          type: integer
          format: int64
          description: id of movie
    NewUserPermission:
      required:
        - userId
        - permissionId
      properties:
        userId:
          type: integer
          format: int64
          description: User id of user
        permissionId:
          type: integer
          format: int16
          description: Permission id of permission
    UserPermissionResponse:
      allOf:
        - $ref: '#/components/schemas/NewUserPermission'
        - required:
            - id
          properties:
            id:
              type: integer
              format: int16
              description: Unique id of the user permission
    UsersPhrases:
      required:
        - userId
        - titleId
        - phraseId
        - languageId
        - phraseCorrect
      properties:
        userId:
          type: integer
          format: int64
          description: id of user
        titleId:
          type: integer
          format: int64
          description: id of title
        phraseId:
          type: integer
          format: int64
          description: id of phrase
        languageId:
          type: integer
          format: int16
          description: id of language
        phraseCorrect:
          type: integer
          format: int16
          description: id of language
    UserLoginResponse:
      required:
        - jwt
      properties:
        jwt:
          type: string
          description: token of user
    TitlesTranslateRequest:
      required:
        - titleId
        - newLanguageId
      properties:
        titleId:
          type: integer
          format: int64
          description: title id of title to translate from
        newLanguageId:
          type: integer
          format: int16
          description: id of language to translate to
    Translates:
      required:
        - phraseId
        - languageId
        - phrase
        - phraseHint
      properties:
        phraseId:
          type: integer
          format: int64
        languageId:
          type: integer
          format: int16
        phrase:
          type: string
        phraseHint:
          type: string
    Language:
      required:
        - id
        - language
        - tag
      properties:
        id:
          type: integer
          format: int16
          description: id of language
        language:
          type: string
          description: string of language
        tag:
          type: string
          description: language tag used for google language methods
    Voice:
      required:
        - id
        - languageId
        - languageCodes
        - ssmlGender
        - name
        - naturalSampleRateHertz
      properties:
        id:
          type: integer
          format: int16
          description: id of voice
        languageId:
          type: integer
          format: int16
          description: id of language
        ssmlGender:
          type: string
          description: gender of voice MALE|FEMALE
        name:
          type: string
          description: the name of the voice
        naturalSampleRateHertz:
          type: integer
          format: int16
          description: the natural sample rate of the voice in hertz
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: [ ]

